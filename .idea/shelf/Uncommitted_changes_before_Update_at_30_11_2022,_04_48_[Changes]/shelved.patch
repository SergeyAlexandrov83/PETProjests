Index: OOP Task/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP Task/.idea/vcs.xml b/OOP Task/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1669598404202)
+++ b/OOP Task/.idea/vcs.xml	(date 1669598404202)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: OOP Task/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP Task/.idea/.gitignore b/OOP Task/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1669598122085)
+++ b/OOP Task/.idea/.gitignore	(date 1669598122085)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: OOP Task/.idea/PETProjests.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP Task/.idea/PETProjests.iml b/OOP Task/.idea/PETProjests.iml
new file mode 100644
--- /dev/null	(date 1669598404192)
+++ b/OOP Task/.idea/PETProjests.iml	(date 1669598404192)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/venv" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: OOP Task/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP Task/.idea/modules.xml b/OOP Task/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1669598404196)
+++ b/OOP Task/.idea/modules.xml	(date 1669598404196)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/PETProjests.iml" filepath="$PROJECT_DIR$/.idea/PETProjests.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: OOP Task/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP Task/.idea/misc.xml b/OOP Task/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1669598404207)
+++ b/OOP Task/.idea/misc.xml	(date 1669598404207)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (PETProjests)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: OOP Task/.idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP Task/.idea/inspectionProfiles/profiles_settings.xml b/OOP Task/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1669598404214)
+++ b/OOP Task/.idea/inspectionProfiles/profiles_settings.xml	(date 1669598404214)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: OOP Task/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP Task/main.py b/OOP Task/main.py
new file mode 100644
--- /dev/null	(date 1669600613555)
+++ b/OOP Task/main.py	(date 1669600613555)
@@ -0,0 +1,122 @@
+""" My first OOP task! """
+class Documents:
+    def __init__(self):
+        self.enters = [
+            {"type": "passport", "number": "2207 876234", "name": "Василий Иванов"},
+            {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
+            {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
+        ]
+        self.bookshelf = {
+            '1': ['2207 876234', '11-2'],
+            '2': ['10006'],
+            '3': []
+        }
+
+    def name_by_num(self):  # P
+        """ Find Name by doc num """
+        number = input('Введите номер документа: ')
+        for doc in self.enters:
+            if doc["number"] == number:
+                return f'Документ с номером {number} принадлежит {doc["name"]}'
+        return f'Документ с номером {number} не найден!'
+
+    def shelf_by_num(self):  # S
+        """ Find Shelf by doc num """
+        number = input('Введите номер документа: ')
+        for shelf, value in self.bookshelf.items():
+            if number in value:
+                return f'Документ с номером {number} находится на полке №{shelf}'
+        return f'Документ с номером {number} не найден!'
+
+    def doc_list(self):  # L
+        """ Print documents list """
+        doc_list = []
+        for doc in self.enters:
+            doc_list.append(f'{doc["type"]} "{doc["number"]}" "{doc["name"]}"')
+        return "\n".join(doc_list)
+
+    def add_doc(self):  # A
+        """ Add doc in Documents """
+        number = input('Введите номер документа: ')
+        doctype = input('Введите тип документа: ')
+        name = input('Введите имя: ')
+        shelf = input('Введите номер полки для хранения: ')
+        if shelf in self.bookshelf.keys():
+            new_enter = {"type": doctype, "number": number, "name": name}
+            self.enters.append(new_enter)
+            self.bookshelf[shelf].append(number)
+            return 'Запись успешно добавлена!'
+        else:
+            return f'Полки с номером {shelf} не существует!'
+
+    def doc_del(self):  # D
+        """ Delete doc by doc num """
+        number = input('Введите номер документа: ')
+        for doc in self.bookshelf.values():
+            if number in doc:
+                doc.remove(number)
+                break
+        else:
+            return f'Документ с номером {number} не найден!'
+        for doc in self.enters:
+            if doc["number"] == number:
+                self.enters.remove(doc)
+                return f'Документ под номером {number} полностью удален!'
+
+    def move_to_shelf(self):  # M
+        """ Move doc from shelf to shelf """
+        shelf_to_move = input('Введите номер полки для перемещения: ')
+        if shelf_to_move not in self.bookshelf.keys():
+            return f'Полка с номером {shelf_to_move} не существует!'
+        number = input('Введите номер документа: ')
+        for saved_doc in self.bookshelf.values():
+            if number in saved_doc:
+                saved_doc.remove(number)
+                self.bookshelf[shelf_to_move].append(number)
+                return f'Документа №{number} на полку {shelf_to_move} успешно перемещен!'
+        return f'Документ с номером {number} не найден!'
+
+    def add_bookshelf(self):  # AS
+        """ Add new shelf """
+        new_shelf = input('Введите номер полки для добавления: ')
+        if new_shelf in self.bookshelf.keys():
+            return f'Полка с номером {new_shelf} уже существует!'
+        else:
+            self.bookshelf[new_shelf] = []
+            return f'Полка под номером {new_shelf} успешно добавлена!'
+
+
+def main():
+    print('Перечень доступных команд - "h"')
+    archive = Documents()
+    commands = {
+        'p': [archive.name_by_num],
+        's': [archive.shelf_by_num],
+        'l': [archive.doc_list],
+        'a': [archive.add_doc],
+        'd': [archive.doc_del],
+        'm': [archive.move_to_shelf],
+        'as': [archive.add_bookshelf]
+    }
+    while True:
+        command = input('Введите команду: ').lower()
+        if command in commands:
+            print(commands[command][0]())
+        elif command == 'h':
+            print('"H" или "h" - вывод списка доступных команд')
+            print('"P" или "p" - выведет имя человека, которому принадлежит документ')
+            print('"S" или "s" - выведет номер полки, на которой находится документ')
+            print('"L" или "l" - выведет список всех документов')
+            print('"A" или "a" - добавит новый документ в каталог и в перечень полок')
+            print('"D" или "d" - удалит полностью документ из каталога и из перечня полок')
+            print('"M" или "m" - переместит документ на целевую полку')
+            print('"AS" или "as" - добавит новую полку в перечень')
+            print('"Q" или "q" - завершает работу программы')
+        elif command == 'q':
+            print('Всего доброго!')
+            break
+        else:
+            print('Введенная команда не поддерживается!')
+
+
+main()
